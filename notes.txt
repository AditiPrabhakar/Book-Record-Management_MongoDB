A book record management API server/ Backend for the library system or management of record or manuals or books

- Server use for:
    >> storing certain book data
    >> user registerations
    >> subscriber

(a fine system included)

- Subcriptions (types):
    > 3 month subcription (Basic)
    > 6 month subcription (Standard)
    > 12 month subcription (Premium)

within subscription >> if we missed renewal >> 50/-
subscription date is missed + renewal date missed >> [50 + 100]/- 

missed by renewal date >> 50/-
missed by subcription date >> 100/-
missed by renewal + subcription date >> 150/-

- Routes and endpoints:

1. /users
POST: create a new user 
GET: to get all the information here

2. /users/{id}
GET: get a user by user id
PUT: update a user by their id
DELETE: delete a user by id (check if he/she have an issued book) & (check if there is any fine to be paid)

3. /users/subcription-details/{id}
GET: get user subscriber details
    > date of subscription
    > valid till
    > is there any fine

4. /books
GET: get all the books
POST: Add a new book

5. /books/{id}
GET: get a book by id
PUT: update a book by id

6. /books/issued
GET: get all issued books

7. /books/issued/withFine
GET: get all issued books with their fine


-npm init 
-npm i nodemon --save-dev

0. env files are increasingly popular as a way to configure an application by securely storing configuration settings, environment variables, and sensitive information.
0. [used to hide sensitive information about database (also added in gitignore)]
0. we can store variables in the .env file but it is recommended to use UPPERCASE for the variable name.

npm i dotenv (to use variables from the env file)
after every change in .env file, we should kill the server and run it again

- MVC (Architecture):
M: Model
V: View (w.r.t frontend [react js])
C: Controllers (Brain or logical part of a route)
    >> books.controllers.js
    >> users.controllers.js

-Schema:
    id: String
    name: String
    age: Number
    gender: char || varchar(15)     

-Model:
    id: 123
    name: Star
    age: 20
    gender: 'F'

-Foreign Key:
Referential Integrity